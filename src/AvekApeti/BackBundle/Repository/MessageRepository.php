<?php

namespace AvekApeti\BackBundle\Repository;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends \Doctrine\ORM\EntityRepository
{

    public function getOneByED1($User_id,$id)
    {

        $query = $this->_em->createQueryBuilder($User_id,$id)

            ->select("m")
            ->from("AvekApetiBackBundle:Message", "m")
            ->where('m.id = :id AND m.emetteur_user = :User_id')
            ->setParameter('User_id',$User_id)
            ->setParameter('id',$id)
            ->getQuery();

        return $query->getResult();
    }

    public function getOneByED2($User_id,$id)
    {
            $query = $this->_em->createQueryBuilder($User_id,$id)
                ->select("m")
                ->from("AvekApetiBackBundle:Message", "m")
                ->where('m.id = :id AND m.dest_user = :User_id')
                ->setParameter('User_id',$User_id)
                ->setParameter('id',$id)
                ->getQuery();

        return $query->getResult();
    }
    public function getByEmetteur($User_id)
    {

        $query = $this->_em->createQueryBuilder($User_id)
            ->select("m")
            ->from("AvekApetiBackBundle:Message", "m")
            ->where('m.emetteur_user = :User_id')
            ->setParameter('User_id',$User_id)
            ->getQuery();

        return $query->getResult();
    }
    public function getByDest($User_id)
    {

        $query = $this->_em->createQueryBuilder($User_id)
            ->select("m")
            ->from("AvekApetiBackBundle:Message", "m")
            ->where('m.dest_user = :User_id')
            ->setParameter('User_id',$User_id)
            ->getQuery();

        return $query->getResult();
    }

    public function getNbMessageNotRead($userId)
    {
        $query = $this->_em->createQueryBuilder()
            ->select("COUNT(m.id)")
            ->from("AvekApetiBackBundle:Message", "m")
            ->where('m.dest_user = :User_id')
            ->andWhere('m.accLecture = 0')
            ->setParameter('User_id',$userId)
            ->getQuery();

        return $query->getSingleScalarResult();
    }
}
